{"remainingRequest":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/horatio/WebstormProjects/vue-admin-template/src/views/network/components/FixedThead.vue?vue&type=style&index=0&id=6dfced2e&lang=css&","dependencies":[{"path":"/Users/horatio/WebstormProjects/vue-admin-template/src/views/network/components/FixedThead.vue","mtime":1682823671474},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZXZlbi1yb3cgewogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7Cn0K"},{"version":3,"sources":["FixedThead.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA","file":"FixedThead.vue","sourceRoot":"src/views/network/components","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-checkbox-group v-model=\"checkboxVal\">\n        <el-checkbox label=\"peerName\">\n          peerName\n        </el-checkbox>\n        <el-checkbox label=\"peerType\">\n          peerType\n        </el-checkbox>\n        <el-checkbox label=\"requestUrl\">\n          requestUrl\n        </el-checkbox>\n        <el-checkbox label=\"mspid\">\n          mspid\n        </el-checkbox>\n        <el-checkbox label=\"high\">\n          high\n        </el-checkbox>\n        <el-checkbox label=\"low\">\n          low\n        </el-checkbox>\n        <el-checkbox label=\"unsigned\">\n          unsigned\n        </el-checkbox>\n      </el-checkbox-group>\n    </div>\n    <el-table @sort-change=\"sortChange\" :key=\"tableKey\" :data=\"list\" border fit highlight-current-row style=\"width: 100%\">\n      <el-table-column v-for=\"Peer in formThead\" :key=\"Peer\" :label=\"Peer\" :class-name=\"getSortClass('peerName')\" sortable=\"custom\">\n        <template slot-scope=\"scope\">\n          {{ scope.row[Peer] }}\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n  </div>\n</template>\n\n<script>\n\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { fetchList } from '@/api/article'\nimport { fetchNetwork } from '@/api/networkInfo'\n\nconst defaultFormThead = ['peerName','requestUrl', 'peerType','mspid','high','low','unsigned']\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 20,\n        importance: undefined,\n        title: undefined,\n        type: undefined,\n        sort: '+peerName'\n      },\n      sortOptions: [{ label: 'peerName Ascending', key: '+peerName' }, { label: 'peerName Descending', key: '-peerName' }],\n      showReviewer: false,\n      tableData: [\n        {\n          name: 'fruit-1',\n          apple: 'apple-10',\n          banana: 'banana-10',\n          orange: 'orange-10'\n        },\n        {\n          name: 'fruit-2',\n          apple: 'apple-20',\n          banana: 'banana-20',\n          orange: 'orange-20'\n        }\n      ],\n      key: 1, // table key\n      formTheadOptions: ['peerName','requestUrl', 'peerType','mspid','high','low','unsigned'],\n      checkboxVal: defaultFormThead, // checkboxVal\n      formThead: defaultFormThead // 默认表头 Default header\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      fetchNetwork().then(response => {\n        this.list = response.data\n        this.total = response.total\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'peerName') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+peerName'\n      } else {\n        this.listQuery.sort = '-peerName'\n      }\n      this.handleFilter()\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    getSortClass: function(key) {\n      const sort = this.listQuery.sort\n      return sort === `+${key}` ? 'ascending' : 'descending'\n    },\n    rowClassName({ row ,rowIndex}) {\n      return rowIndex % 2 === 0 ? 'even-row' : '';\n    },\n  },\n  watch: {\n    checkboxVal(valArr) {\n      this.formThead = this.formTheadOptions.filter(i => valArr.indexOf(i) >= 0)\n      this.key = this.key + 1\n    }\n  }\n}\n</script>\n\n<style>\n\n.even-row {\n  background-color: #f5f5f5;\n}\n</style>\n"]}]}