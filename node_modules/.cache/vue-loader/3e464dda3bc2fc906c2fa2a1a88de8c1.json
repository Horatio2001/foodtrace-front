{"remainingRequest":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/horatio/WebstormProjects/vue-admin-template/src/views/blocks/components/FixedThead.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/horatio/WebstormProjects/vue-admin-template/src/views/blocks/components/FixedThead.vue","mtime":1682690196684},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgd2F2ZXMgZnJvbSAnQC9kaXJlY3RpdmUvd2F2ZXMnIC8vIHdhdmVzIGRpcmVjdGl2ZQppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICdAL2NvbXBvbmVudHMvUGFnaW5hdGlvbicgLy8gc2Vjb25kYXJ5IHBhY2thZ2UgYmFzZWQgb24gZWwtcGFnaW5hdGlvbgppbXBvcnQgeyBmZXRjaEJsb2NrQnlQYWdlLCBmZXRjaEJsb2NrIH0gZnJvbSAnQC9hcGkvYmxvY2tJbmZvJwppbXBvcnQgeyBnZXRCbG9ja0hlaWdodCB9IGZyb20gJ0AvYXBpL2Jsb2NrJwpjb25zdCBkZWZhdWx0Rm9ybVRoZWFkID0gWydibG9ja051bWJlcicsJ2NoYW5uZWxOYW1lJywgJ3RyYW5zYWN0aW9uQ291bnQnLCdkYXRhSGFzaCcsJ2Jsb2NrSGFzaCcsJ3ByZXZpb3VzSGFzaCcsJ3RyYW5zYWN0aW9ucycsJ3R5cGUnLCd0aW1lJ10KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ29tcGxleFRhYmxlJywKICBjb21wb25lbnRzOiB7IFBhZ2luYXRpb24gfSwKICBkaXJlY3RpdmVzOiB7IHdhdmVzIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYmxlS2V5OiAwLAogICAgICBsaXN0OiBudWxsLAogICAgICB0b3RhbDogMCwKICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgIGxpc3RRdWVyeTogewogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgbGltaXQ6IDEwLAogICAgICAgIGltcG9ydGFuY2U6IHVuZGVmaW5lZCwKICAgICAgICB0aXRsZTogdW5kZWZpbmVkLAogICAgICAgIHR5cGU6IHVuZGVmaW5lZCwKICAgICAgICBzb3J0OiAnK3BlZXJOYW1lJwogICAgICB9LAogICAgICBzb3J0T3B0aW9uczogW3sgbGFiZWw6ICdwZWVyTmFtZSBBc2NlbmRpbmcnLCBrZXk6ICcrcGVlck5hbWUnIH0sIHsgbGFiZWw6ICdwZWVyTmFtZSBEZXNjZW5kaW5nJywga2V5OiAnLXBlZXJOYW1lJyB9XSwKICAgICAgc2hvd1Jldmlld2VyOiBmYWxzZSwKICAgICAgdGFibGVEYXRhOiBbCiAgICAgICAgewogICAgICAgICAgbmFtZTogJ2ZydWl0LTEnLAogICAgICAgICAgYXBwbGU6ICdhcHBsZS0xMCcsCiAgICAgICAgICBiYW5hbmE6ICdiYW5hbmEtMTAnLAogICAgICAgICAgb3JhbmdlOiAnb3JhbmdlLTEwJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogJ2ZydWl0LTInLAogICAgICAgICAgYXBwbGU6ICdhcHBsZS0yMCcsCiAgICAgICAgICBiYW5hbmE6ICdiYW5hbmEtMjAnLAogICAgICAgICAgb3JhbmdlOiAnb3JhbmdlLTIwJwogICAgICAgIH0KICAgICAgXSwKICAgICAga2V5OiAxLCAvLyB0YWJsZSBrZXkKICAgICAgZm9ybVRoZWFkT3B0aW9uczogWydibG9ja051bWJlcicsJ2NoYW5uZWxOYW1lJywgJ3RyYW5zYWN0aW9uQ291bnQnLCdkYXRhSGFzaCcsJ2Jsb2NrSGFzaCcsJ3ByZXZpb3VzSGFzaCcsJ3RyYW5zYWN0aW9ucycsJ3R5cGUnLCd0aW1lJ10sCiAgICAgIGNoZWNrYm94VmFsOiBkZWZhdWx0Rm9ybVRoZWFkLCAvLyBjaGVja2JveFZhbAogICAgICBmb3JtVGhlYWQ6IGRlZmF1bHRGb3JtVGhlYWQgLy8g6buY6K6k6KGo5aS0IERlZmF1bHQgaGVhZGVyCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldExpc3QoKSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlCiAgICAgIGZldGNoQmxvY2tCeVBhZ2UodGhpcy5saXN0UXVlcnkucGFnZSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YQogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlCiAgICAgICAgfSwgMS41ICogMTAwMCkKICAgICAgfSkKICAgICAgZ2V0QmxvY2tIZWlnaHQoKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICB0aGlzLnRvdGFsID0gcmVzcG9uc2UuZGF0YQogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlCiAgICAgICAgfSwgMS41ICogMTAwMCkKICAgICAgfSkKICAgIH0sCiAgICBzb3J0Q2hhbmdlKGRhdGEpIHsKICAgICAgY29uc3QgeyBwcm9wLCBvcmRlciB9ID0gZGF0YQogICAgICBpZiAocHJvcCA9PT0gJ3BlZXJOYW1lJykgewogICAgICAgIHRoaXMuc29ydEJ5SUQob3JkZXIpCiAgICAgIH0KICAgIH0sCiAgICBzb3J0QnlJRChvcmRlcikgewogICAgICBpZiAob3JkZXIgPT09ICdhc2NlbmRpbmcnKSB7CiAgICAgICAgdGhpcy5saXN0UXVlcnkuc29ydCA9ICcrcGVlck5hbWUnCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5saXN0UXVlcnkuc29ydCA9ICctcGVlck5hbWUnCiAgICAgIH0KICAgICAgdGhpcy5oYW5kbGVGaWx0ZXIoKQogICAgfSwKICAgIGhhbmRsZUZpbHRlcigpIHsKICAgICAgdGhpcy5saXN0UXVlcnkucGFnZSA9IDEKICAgICAgdGhpcy5nZXRMaXN0KCkKICAgIH0sCiAgICBnZXRTb3J0Q2xhc3M6IGZ1bmN0aW9uKGtleSkgewogICAgICBjb25zdCBzb3J0ID0gdGhpcy5saXN0UXVlcnkuc29ydAogICAgICByZXR1cm4gc29ydCA9PT0gYCske2tleX1gID8gJ2FzY2VuZGluZycgOiAnZGVzY2VuZGluZycKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjaGVja2JveFZhbCh2YWxBcnIpIHsKICAgICAgdGhpcy5mb3JtVGhlYWQgPSB0aGlzLmZvcm1UaGVhZE9wdGlvbnMuZmlsdGVyKGkgPT4gdmFsQXJyLmluZGV4T2YoaSkgPj0gMCkKICAgICAgdGhpcy5rZXkgPSB0aGlzLmtleSArIDEKICAgIH0KICB9Cn0K"},{"version":3,"sources":["FixedThead.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FixedThead.vue","sourceRoot":"src/views/blocks/components","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-checkbox-group v-model=\"checkboxVal\">\n        <el-checkbox label=\"blockNumber\">\n          blockNumber\n        </el-checkbox>\n        <el-checkbox label=\"channelName\">\n          channelName\n        </el-checkbox>\n        <el-checkbox label=\"transactionCount\">\n          transactionCount\n        </el-checkbox>\n        <el-checkbox label=\"dataHash\">\n          dataHash\n        </el-checkbox>\n        <el-checkbox label=\"blockHash\">\n          blockHash\n        </el-checkbox>\n        <el-checkbox label=\"previousHash\">\n          previousHash\n        </el-checkbox>\n        <el-checkbox label=\"transactions\">\n          transactions\n        </el-checkbox>\n        <el-checkbox label=\"type\">\n          type\n        </el-checkbox>\n        <el-checkbox label=\"time\">\n          time\n        </el-checkbox>\n      </el-checkbox-group>\n    </div>\n    <el-table @sort-change=\"sortChange\" :key=\"tableKey\" :data=\"list\" border fit highlight-current-row style=\"width: 100%\">\n      <el-table-column v-for=\"Block in formThead\" :key=\"Block\" :label=\"Block\" :class-name=\"getSortClass('peerName')\" sortable=\"custom\">\n        <template slot-scope=\"scope\">\n          {{ scope.row[Block] }}\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n  </div>\n</template>\n\n<script>\n\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { fetchBlockByPage, fetchBlock } from '@/api/blockInfo'\nimport { getBlockHeight } from '@/api/block'\nconst defaultFormThead = ['blockNumber','channelName', 'transactionCount','dataHash','blockHash','previousHash','transactions','type','time']\n\nexport default {\n  name: 'ComplexTable',\n  components: { Pagination },\n  directives: { waves },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        importance: undefined,\n        title: undefined,\n        type: undefined,\n        sort: '+peerName'\n      },\n      sortOptions: [{ label: 'peerName Ascending', key: '+peerName' }, { label: 'peerName Descending', key: '-peerName' }],\n      showReviewer: false,\n      tableData: [\n        {\n          name: 'fruit-1',\n          apple: 'apple-10',\n          banana: 'banana-10',\n          orange: 'orange-10'\n        },\n        {\n          name: 'fruit-2',\n          apple: 'apple-20',\n          banana: 'banana-20',\n          orange: 'orange-20'\n        }\n      ],\n      key: 1, // table key\n      formTheadOptions: ['blockNumber','channelName', 'transactionCount','dataHash','blockHash','previousHash','transactions','type','time'],\n      checkboxVal: defaultFormThead, // checkboxVal\n      formThead: defaultFormThead // 默认表头 Default header\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      fetchBlockByPage(this.listQuery.page).then(response => {\n        this.list = response.data\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n      getBlockHeight().then(response => {\n        this.total = response.data\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'peerName') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+peerName'\n      } else {\n        this.listQuery.sort = '-peerName'\n      }\n      this.handleFilter()\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.getList()\n    },\n    getSortClass: function(key) {\n      const sort = this.listQuery.sort\n      return sort === `+${key}` ? 'ascending' : 'descending'\n    }\n  },\n  watch: {\n    checkboxVal(valArr) {\n      this.formThead = this.formTheadOptions.filter(i => valArr.indexOf(i) >= 0)\n      this.key = this.key + 1\n    }\n  }\n}\n</script>\n\n"]}]}