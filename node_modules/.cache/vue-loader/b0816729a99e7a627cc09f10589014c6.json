{"remainingRequest":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/horatio/WebstormProjects/vue-admin-template/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/horatio/WebstormProjects/vue-admin-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/horatio/WebstormProjects/vue-admin-template/src/views/resource/collectInfo/index.vue?vue&type=template&id=91970458&","dependencies":[{"path":"/Users/horatio/WebstormProjects/vue-admin-template/src/views/resource/collectInfo/index.vue","mtime":1682756024720},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/horatio/WebstormProjects/vue-admin-template/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}